<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:ctrls="clr-namespace:BattleLauncher.Controls"
    xmlns:local="clr-namespace:BattleLauncher">

    <FontFamily x:Key="FontIcon">Segoe MDL2 Assets, Assets/#Segoe MDL2 Assets</FontFamily>

    <Style TargetType="TextBlock">
        <Setter Property="Foreground" Value="White" />
    </Style>

    <Style x:Key="Slider_RepeatButtonStyle" TargetType="{x:Type RepeatButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RepeatButton">
                    <Border Name="border" Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="#5f5f5f" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="Slider_ThumbStyle" TargetType="{x:Type Thumb}">
        <Setter Property="Background" Value="#9f9f9f" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Thumb">
                    <Rectangle
                        Width="{TemplateBinding Width}"
                        Height="{TemplateBinding Height}"
                        Fill="{TemplateBinding Background}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type Slider}">
        <Setter Property="Margin" Value="20" />
        <Setter Property="IsSnapToTickEnabled" Value="True" />
        <Setter Property="TickPlacement" Value="Both" />
        <Setter Property="TickFrequency" Value="1" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Slider}">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <TickBar Name="TopTick"
                            Grid.Row="0" Height="4" Fill="Red" Placement="Top"
                            Visibility="Collapsed" />
                        <Track Name="PART_Track"
                            Grid.Row="1" Height="16">
                            <Track.DecreaseRepeatButton>
                                <RepeatButton
                                    Background="{TemplateBinding Background}"
                                    Command="Slider.DecreaseLarge"
                                    Style="{StaticResource Slider_RepeatButtonStyle}" />
                            </Track.DecreaseRepeatButton>
                            <Track.Thumb>
                                <Thumb Width="96" Style="{StaticResource Slider_ThumbStyle}" />
                            </Track.Thumb>
                            <Track.IncreaseRepeatButton>
                                <RepeatButton
                                    Background="{TemplateBinding Background}"
                                    Command="Slider.IncreaseLarge"
                                    Style="{StaticResource Slider_RepeatButtonStyle}" />
                            </Track.IncreaseRepeatButton>
                        </Track>
                        <TickBar Name="BottomTick"
                            Grid.Row="2" Height="4" Fill="Red" Placement="Bottom"
                            Visibility="Collapsed" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type TextBox}">
        <Setter Property="Background" Value="#0f0f0f" />
        <Setter Property="Foreground" Value="#ffffff" />
        <Setter Property="Padding" Value="4" />
    </Style>

    <Style TargetType="{x:Type GroupBox}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type GroupBox}">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="auto" />
                            <RowDefinition />
                        </Grid.RowDefinitions>
                        <Border
                            Padding="8 2" BorderBrush="#3f3f3f" BorderThickness="3">
                            <TextBlock
                                FontSize="20"
                                Foreground="{TemplateBinding Foreground}"
                                Text="{TemplateBinding Header}" />
                        </Border>
                        <Border
                            Grid.Row="1" Padding="8"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="3 0 3 3">
                            <ContentPresenter />
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type CheckBox}">
        <Setter Property="Background" Value="#3f3f3f" />
        <Setter Property="Foreground" Value="#ffffff" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="CheckBox">
                    <Grid Width="{TemplateBinding Width}" ToolTip="{TemplateBinding Content}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="auto" />
                            <ColumnDefinition />
                        </Grid.ColumnDefinitions>
                        <TextBlock x:Name="_ico"
                            Height="12"
                            Background="{TemplateBinding Background}"
                            FontFamily="{StaticResource FontIcon}"
                            Foreground="{TemplateBinding Foreground}"
                            Text="&#xE739;" />
                        <TextBlock
                            Grid.Column="1" Margin="4 0 0 0" VerticalAlignment="Center"
                            Foreground="{TemplateBinding Foreground}"
                            Text="{Binding Content, RelativeSource={RelativeSource TemplatedParent}}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter TargetName="_ico" Property="Text" Value="&#xE73A;" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="{x:Null}">
                            <Setter TargetName="_ico" Property="Text" Value="&#xE73C;" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="_ico" Property="Background" Value="#9f9f9f" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type Button}">
        <Setter Property="Background" Value="#3f3f3f" />
        <Setter Property="Foreground" Value="#ffffff" />
        <Setter Property="Margin" Value="3 0" />
        <Setter Property="Padding" Value="16 4" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Name="border"
                        Padding="{TemplateBinding Padding}"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="#5f5f5f" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" Value="#1f1f1f" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  ComboBox  -->
    <!--  ComBoBox项选中背景色  -->
    <SolidColorBrush x:Key="ComboBoxSelectdBackground" Color="#5f5f5f" />
    <!--  ComBoBox项鼠标经过背景色  -->
    <SolidColorBrush x:Key="ComboBoxMouseOverBackground" Color="#7f7f7f" />
    <!--  ComBoBox项选中前景色  -->
    <SolidColorBrush x:Key="ComboBoxSelectedForeground" Color="White" />
    <!--  ComBoBox项鼠标经过前景色  -->
    <SolidColorBrush x:Key="ComboBoxMouseOverForegrond" Color="White" />
    <!--  下拉按钮  -->
    <Style x:Key="ComboxStyleBtn" TargetType="{x:Type ToggleButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border x:Name="Back"
                        Background="{TemplateBinding Background}"
                        BorderBrush="Transparent" BorderThickness="1">
                        <Path Name="PathFill"
                            Width="8" Height="6" Data="M5,0 L10,10 L0,10 z"
                            Fill="{TemplateBinding Foreground}"
                            RenderTransformOrigin="0.5,0.5" Stretch="Fill"
                            StrokeThickness="0">
                            <Path.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform />
                                    <SkewTransform />
                                    <RotateTransform Angle="180" />
                                    <TranslateTransform />
                                </TransformGroup>
                            </Path.RenderTransform>
                        </Path>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="PathFill" Property="Fill" Value="{StaticResource ComboBoxMouseOverForegrond}" />
                            <Setter TargetName="Back" Property="Background" Value="{StaticResource ComboBoxMouseOverBackground}" />
                            <Setter TargetName="Back" Property="BorderBrush" Value="{StaticResource ComboBoxMouseOverBackground}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type ComboBox}">
        <Setter Property="ItemContainerStyle">
            <Setter.Value>
                <Style TargetType="ComboBoxItem">
                    <Setter Property="Height" Value="20" />
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                                <Grid Width="{TemplateBinding Width}" Height="{TemplateBinding Height}">
                                    <Border x:Name="_borderbg" Background="Transparent" />
                                    <TextBlock x:Name="_txt"
                                        Margin="3 0 3 0" VerticalAlignment="Center"
                                        Foreground="#FFFFFF"
                                        Text="{Binding Content, RelativeSource={RelativeSource TemplatedParent}}" />
                                    <Border x:Name="_border"
                                        Background="White" Opacity="0" />
                                </Grid>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsSelected" Value="true">
                                        <Setter TargetName="_borderbg" Property="Background" Value="{StaticResource ComboBoxSelectdBackground}" />
                                        <Setter TargetName="_txt" Property="Foreground" Value="{StaticResource ComboBoxSelectedForeground}" />
                                    </Trigger>
                                    <MultiTrigger>
                                        <MultiTrigger.Conditions>
                                            <Condition Property="IsSelected" Value="false" />
                                            <Condition Property="IsMouseOver" Value="true" />
                                        </MultiTrigger.Conditions>
                                        <Setter TargetName="_borderbg" Property="Background" Value="{StaticResource ComboBoxMouseOverBackground}" />
                                        <Setter TargetName="_txt" Property="Foreground" Value="{StaticResource ComboBoxMouseOverForegrond}" />
                                    </MultiTrigger>

                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="0.7*" />
                            <ColumnDefinition Width="0.3*" MaxWidth="30" />
                        </Grid.ColumnDefinitions>
                        <Border
                            Grid.Column="0" Grid.ColumnSpan="2" Background="#3f3f3f"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="1" CornerRadius="0" />
                        <ContentPresenter x:Name="ContentSite"
                            Margin="3 3 0 3" HorizontalAlignment="Left"
                            VerticalAlignment="Center"
                            Content="{TemplateBinding SelectionBoxItem}"
                            ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                            ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                            IsHitTestVisible="False" />

                        <!--  ToggleButton 已数据绑定到 ComboBox 本身以切换 IsDropDownOpen  -->
                        <ToggleButton x:Name="ToggleButton"
                            Grid.Column="1" Grid.ColumnSpan="2" Background="#3f3f3f"
                            ClickMode="Press" Focusable="false"
                            Foreground="{TemplateBinding Foreground}"
                            IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                            Style="{StaticResource ComboxStyleBtn}" />
                        <!--  必须将 TextBox 命名为 PART_EditableTextBox，否则 ComboBox 将无法识别它  -->
                        <TextBox x:Name="PART_EditableTextBox"
                            Margin="2" VerticalAlignment="Center" Background="#3f3f3f"
                            BorderThickness="0" Focusable="True"
                            Foreground="{TemplateBinding Foreground}"
                            IsReadOnly="{TemplateBinding IsReadOnly}"
                            Visibility="Hidden" />

                        <!--  Popup 可显示 ComboBox 中的项列表。IsOpen 已数据绑定到通过 ComboBoxToggleButton 来切换的 IsDropDownOpen  -->
                        <Popup x:Name="Popup"
                            AllowsTransparency="True" Focusable="False"
                            IsOpen="{TemplateBinding IsDropDownOpen}"
                            Placement="Bottom" PopupAnimation="Slide">
                            <Grid x:Name="DropDown"
                                MinWidth="{TemplateBinding ActualWidth}"
                                MaxHeight="150" SnapsToDevicePixels="True">
                                <Border x:Name="DropDownBorder"
                                    BorderBrush="#000000" BorderThickness="1 0 1 1" />
                                <ScrollViewer
                                    Margin="1" CanContentScroll="True"
                                    HorizontalScrollBarVisibility="Auto"
                                    SnapsToDevicePixels="True"
                                    VerticalScrollBarVisibility="Auto">
                                    <!--  StackPanel 用于显示子级，方法是将 IsItemsHost 设置为 True  -->
                                    <StackPanel
                                        Background="#2f2f2f" IsItemsHost="True"
                                        KeyboardNavigation.DirectionalNavigation="Contained" />
                                </ScrollViewer>
                            </Grid>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEditable" Value="true">
                            <Setter TargetName="PART_EditableTextBox" Property="Visibility" Value="Visible" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  DataGrid样式  -->
    <Style TargetType="DataGrid">
        <!--  网格线颜色  -->
        <Setter Property="CanUserResizeColumns" Value="false" />
        <Setter Property="Background" Value="#000" />
        <Setter Property="BorderBrush" Value="#3f3f3f" />
        <Setter Property="HorizontalGridLinesBrush">
            <Setter.Value>
                <SolidColorBrush Color="#3f3f3f" />
            </Setter.Value>
        </Setter>
        <Setter Property="VerticalGridLinesBrush">
            <Setter.Value>
                <SolidColorBrush Color="#3f3f3f" />
            </Setter.Value>
        </Setter>
    </Style>

    <!--  标题栏样式  -->

    <Style TargetType="DataGridColumnHeader">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="MinWidth" Value="0" />
        <Setter Property="MinHeight" Value="28" />
        <Setter Property="Foreground" Value="#ffffff" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="DataGridColumnHeader">
                    <Border x:Name="BackgroundBorder"
                        Width="Auto" BorderBrush="#7f7f7f" BorderThickness="0 1 0 1">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <ContentPresenter
                                Margin="0 0 0 0" HorizontalAlignment="Center"
                                VerticalAlignment="Center" />
                            <Path x:Name="SortArrow"
                                Grid.Column="2" Width="8" Height="6" Margin="0 0 50 0"
                                VerticalAlignment="Center" Data="M0,0 L1,0 0.5,1 z"
                                Fill="White" RenderTransformOrigin="1,1" Stretch="Fill"
                                Visibility="Collapsed" />
                            <Rectangle
                                Grid.ColumnSpan="1" Width="1" HorizontalAlignment="Right"
                                Fill="#7f7f7f" />
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Height" Value="25" />
    </Style>


    <Style TargetType="DataGridRow">
        <Setter Property="Background" Value="#3f3f3f" />
        <Setter Property="Height" Value="25" />
        <Setter Property="Foreground" Value="#c3c3c3" />
        <Style.Triggers>
            <!--  隔行换色  -->
            <Trigger Property="AlternationIndex" Value="0">
                <Setter Property="Background" Value="#1f1f1f" />
            </Trigger>
            <!--<Trigger Property="AlternationIndex" Value="1">
                <Setter Property="Background" Value="#3f3f3f" />
            </Trigger>-->

            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#5f5f5f" />
                <!--<Setter Property="Foreground" Value="White"/>-->
            </Trigger>

            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Foreground" Value="#7f7f7f" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <!--  单元格样式触发  -->
    <Style TargetType="DataGridCell">
        <Setter Property="Background" Value="#3f3f3f" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="DataGridCell">
                    <TextBlock VerticalAlignment="Center" TextAlignment="Center">
                        <ContentPresenter />
                    </TextBlock>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Foreground" Value="#ffffff" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--  ScrollViewer 滚动条  -->
    <Style x:Key="ScrollBarThumb" TargetType="{x:Type Thumb}">
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Grid>
                        <!--  滚动条颜色  -->
                        <Border Background="#646465" CornerRadius="3" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="HorizontalScrollBarPageButton" TargetType="{x:Type RepeatButton}">
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="Opacity" Value="0.2" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Rectangle
                        Width="{TemplateBinding Width}"
                        Height="{TemplateBinding Height}"
                        Fill="{TemplateBinding Background}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="VerticalScrollBarPageButton" TargetType="{x:Type RepeatButton}">
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="Opacity" Value="0.2" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Rectangle
                        Width="{TemplateBinding Width}"
                        Height="{TemplateBinding Height}"
                        Fill="{TemplateBinding Background}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  滚动条上下按钮  -->
    <Style x:Key="VerticalScrollBarPageButton2" TargetType="{x:Type RepeatButton}">
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="Opacity" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Rectangle
                        Width="0" Height="0" Fill="#90000000" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="for_scrollbar" TargetType="{x:Type ScrollBar}">
        <Setter Property="Stylus.IsPressAndHoldEnabled" Value="false" />
        <Setter Property="Stylus.IsFlicksEnabled" Value="false" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Margin" Value="0 1 1 6" />
        <Setter Property="Width" Value="5" />
        <Setter Property="MinWidth" Value="3" />
        <Setter Property="Opacity" Value="0.2" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollBar}">
                    <Grid x:Name="Bg" SnapsToDevicePixels="true">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="auto" />
                            <RowDefinition Height="*" />
                            <RowDefinition Height="auto" />
                        </Grid.RowDefinitions>
                        <RepeatButton
                            Grid.Row="0"
                            Command="{x:Static ScrollBar.PageUpCommand}"
                            Style="{StaticResource VerticalScrollBarPageButton2}" />
                        <Track x:Name="PART_Track"
                            Grid.Row="1" IsDirectionReversed="true"
                            IsEnabled="{TemplateBinding IsMouseOver}">
                            <Track.DecreaseRepeatButton>
                                <RepeatButton Command="{x:Static ScrollBar.PageUpCommand}" Style="{StaticResource VerticalScrollBarPageButton}" />
                            </Track.DecreaseRepeatButton>
                            <Track.IncreaseRepeatButton>
                                <RepeatButton Command="{x:Static ScrollBar.PageDownCommand}" Style="{StaticResource VerticalScrollBarPageButton}" />
                            </Track.IncreaseRepeatButton>
                            <Track.Thumb>
                                <Thumb Style="{StaticResource ScrollBarThumb}" />
                            </Track.Thumb>
                        </Track>
                        <RepeatButton
                            Grid.Row="2"
                            Command="{x:Static ScrollBar.PageDownCommand}"
                            Style="{StaticResource VerticalScrollBarPageButton2}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="Orientation" Value="Horizontal">
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="Margin" Value="1 0 6 1" />
                <Setter Property="Height" Value="5" />
                <Setter Property="MinHeight" Value="5" />
                <Setter Property="Width" Value="Auto" />
                <Setter Property="Opacity" Value="0.2" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ScrollBar}">
                            <Grid x:Name="Bg" SnapsToDevicePixels="true">
                                <Track x:Name="PART_Track" IsEnabled="{TemplateBinding IsMouseOver}">
                                    <Track.DecreaseRepeatButton>
                                        <RepeatButton Command="{x:Static ScrollBar.PageLeftCommand}" Style="{StaticResource HorizontalScrollBarPageButton}" />
                                    </Track.DecreaseRepeatButton>
                                    <Track.IncreaseRepeatButton>
                                        <RepeatButton Command="{x:Static ScrollBar.PageRightCommand}" Style="{StaticResource HorizontalScrollBarPageButton}" />
                                    </Track.IncreaseRepeatButton>
                                    <Track.Thumb>
                                        <Thumb Style="{StaticResource ScrollBarThumb}" />
                                    </Track.Thumb>
                                </Track>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="for_scrollviewer" TargetType="{x:Type ScrollViewer}">
        <Setter Property="BorderBrush" Value="LightGray" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                    <Border
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        SnapsToDevicePixels="True">
                        <Grid Background="{TemplateBinding Background}">
                            <ScrollContentPresenter
                                Margin="{TemplateBinding Padding}"
                                ContentTemplate="{TemplateBinding ContentTemplate}"
                                Cursor="{TemplateBinding Cursor}" />
                            <ScrollBar x:Name="PART_VerticalScrollBar"
                                HorizontalAlignment="Right"
                                Maximum="{TemplateBinding ScrollableHeight}"
                                Orientation="Vertical"
                                Style="{StaticResource for_scrollbar}"
                                ViewportSize="{TemplateBinding ViewportHeight}"
                                Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
                                Value="{TemplateBinding VerticalOffset}" />
                            <ScrollBar x:Name="PART_HorizontalScrollBar"
                                VerticalAlignment="Bottom"
                                Maximum="{TemplateBinding ScrollableWidth}"
                                Orientation="Horizontal"
                                Style="{StaticResource for_scrollbar}"
                                ViewportSize="{TemplateBinding ViewportWidth}"
                                Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
                                Value="{TemplateBinding HorizontalOffset}" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <EventTrigger RoutedEvent="ScrollChanged">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation
                                        Storyboard.TargetName="PART_VerticalScrollBar"
                                        Storyboard.TargetProperty="Opacity" To="0.8"
                                        Duration="0:0:1" />
                                    <DoubleAnimation
                                        BeginTime="0:0:1"
                                        Storyboard.TargetName="PART_VerticalScrollBar"
                                        Storyboard.TargetProperty="Opacity" To="0.2"
                                        Duration="0:0:1" />
                                    <DoubleAnimation
                                        Storyboard.TargetName="PART_HorizontalScrollBar"
                                        Storyboard.TargetProperty="Opacity" To="0.8"
                                        Duration="0:0:1" />
                                    <DoubleAnimation
                                        BeginTime="0:0:1"
                                        Storyboard.TargetName="PART_HorizontalScrollBar"
                                        Storyboard.TargetProperty="Opacity" To="0.2"
                                        Duration="0:0:1" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="MouseEnter" SourceName="PART_VerticalScrollBar">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation
                                        Storyboard.TargetName="PART_VerticalScrollBar"
                                        Storyboard.TargetProperty="Opacity" To="0.8"
                                        Duration="0:0:0.7" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="MouseLeave" SourceName="PART_VerticalScrollBar">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation
                                        Storyboard.TargetName="PART_VerticalScrollBar"
                                        Storyboard.TargetProperty="Opacity" To="0.2"
                                        Duration="0:0:0.7" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="MouseEnter" SourceName="PART_HorizontalScrollBar">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation
                                        Storyboard.TargetName="PART_HorizontalScrollBar"
                                        Storyboard.TargetProperty="Opacity" To="0.8"
                                        Duration="0:0:0.7" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="MouseLeave" SourceName="PART_HorizontalScrollBar">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation
                                        Storyboard.TargetName="PART_HorizontalScrollBar"
                                        Storyboard.TargetProperty="Opacity" To="0.2"
                                        Duration="0:0:0.7" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  默认ScrollBar  -->
    <Style BasedOn="{StaticResource for_scrollbar}" TargetType="ScrollBar" />

    <!--  默认ScrollView  -->
    <Style BasedOn="{StaticResource for_scrollviewer}" TargetType="ScrollViewer" />

    <!--  =============== 提示文本样式 ===============  -->
    <Style TargetType="{x:Type ToolTip}">
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Grid>
                        <Border Background="#cf000000">
                            <Border.Effect>
                                <DropShadowEffect
                                    BlurRadius="7" Direction="0" Opacity="0.09" ShadowDepth="0"
                                    Color="#222" />
                            </Border.Effect>
                        </Border>
                        <TextBlock
                            Margin="6" FontSize="13"
                            Text="{TemplateBinding ContentControl.Content}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>