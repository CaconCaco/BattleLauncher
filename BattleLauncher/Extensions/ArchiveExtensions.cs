using System.IO;
using System.Text;
using System.Threading.Tasks;

using BattleLauncher.ViewModels;

namespace BattleLauncher.Extensions
{
    public static class ArchiveExtensions
    {
        private static string GetGameSavedName(this Stream stream)
        {
            var sb = new StringBuilder(0x40);
            stream.Seek(0x09C0, SeekOrigin.Begin);
            using (var sr = new StreamReader(stream, Encoding.Unicode, true, 0x40, false))
                for (var i = 0; sr.Peek() > 0; i++)
                    sb.Append((char)sr.Read());

            return sb.ToString();
        }

        public static SavedGameViewModel GetSavedGameInfo(this FileInfo file) => new SavedGameViewModel
        {
            Name = file.OpenRead().GetGameSavedName(),
            Time = file.LastWriteTime,
            RealFile = file
        };
        public static async Task WriteSpawnAsync(this SavedGameViewModel vm, TextWriter writer)
        {
            await writer.WriteLineAsync(new StringBuilder()
                .AppendLine(";generated by Singleplayer Campaign Launcher")
                .AppendLine("[Settings]")
                .AppendLine("Scenario=spawnmap.ini")
                .Append("SaveGameName=")
                .AppendLine(vm.RealFile.Name)
                .AppendLine("LoadSaveGame=Yes")
                .AppendLine("SidebarHack=False")
                .AppendLine("Firestorm=No")
                .AppendLine("GameSpeed=2")
                .ToString());
            await writer.FlushAsync();
        }
    }
}